//
// --------------------------------------------------------------------------
//  Gurux Ltd
//
//
//
// Filename:        $HeadURL$
//
// Version:         $Revision$,
//                  $Date$
//                  $Author$
//
// Copyright (c) Gurux Ltd
//
//---------------------------------------------------------------------------
//
//  DESCRIPTION
//
// This file is a part of Gurux Device Framework.
//
// Gurux Device Framework is Open Source software; you can redistribute it
// and/or modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2 of the License.
// Gurux Device Framework is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// More information of Gurux products: http://www.gurux.org
//
// This code is licensed under the GNU General Public License v2.
// Full text may be retrieved at http://www.gnu.org/licenses/gpl-2.0.txt
//---------------------------------------------------------------------------

group = "org.gurux"
version = "1.0.4"

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'java'

sourceSets {
    main {
        java {
            srcDirs = ["app\\src\\main\\java"]
        }
    }
}

javadoc {
    source = sourceSets.main.java.srcDirs
    classpath = configurations.compile
    destinationDir = file("javadoc/")
}

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

if (project.hasProperty('release')) {

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.java.srcDirs
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    allprojects {
        apply plugin: 'signing'
        apply plugin: 'maven'

        // Signature of artifacts
        signing {
            sign configurations.archives
        }

        // OSSRH publication
        uploadArchives {
            repositories {
                mavenDeployer {
                    // POM signature
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                    // Target repository
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }
                    pom.project {
                        name project.name
                        description project.description
                        packaging 'jar'
                        url 'https://github.com/Gurux/gurux.common.android/'

                        scm {
                            connection 'scm:git:https://github.com/Gurux/gurux.common.android.git'
                            developerConnection 'scm:git:git@github.com:Gurux/gurux.common.android.git'
                            url 'https://github.com/Gurux/gurux.common.android.git'
                        }

                        licenses {
                            license {
                                name 'GNU General Public License, version 2'
                                url 'http://www.gnu.org/licenses/gpl-2.0.txt'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'gurux'
                                name = 'Gurux Ltd'
                                email = 'http://www.gurux.org'
                            }
                        }
                    }
                }
            }
        }

    }
}

nexusStaging {
    packageGroup = 'org.gurux'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
